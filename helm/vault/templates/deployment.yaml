apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.namespace }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
    {{- toYaml .Values.deployment.labels | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- toYaml .Values.deployment.labels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.deployment.labels | nindent 8 }}
    spec:
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vault.serviceAccountName" . }}
      initContainers:
      - name: init-permissions
        image: {{ .Values.initContainer.image }}
        command: ['sh', '-c', 'mkdir -p /vault/data && chown -R 100:1000 /vault/data && chmod -R 755 /vault/data']
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        securityContext:
          {{- toYaml .Values.initContainer.securityContext | nindent 12 }}
      containers:
      - name: {{ .Values.namespace }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh"]
        args:
        - -c
        - |
          cp /vault/config/vault.hcl /tmp/vault.hcl
          exec vault server -config=/tmp/vault.hcl
        ports:
        - containerPort: {{ .Values.service.targetPort }}
          name: http
        env:
        {{- range $name, $value := .Values.env }}
        - name: {{ $name }}
          value: {{ $value | quote }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probes.readiness.path }}
            port: {{ .Values.probes.readiness.port }}
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probes.liveness.path }}
            port: {{ .Values.probes.liveness.port }}
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
        volumeMounts:
        - name: vault-config
          mountPath: /vault/config
          readOnly: true
        - name: vault-data
          mountPath: /vault/data
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
      - name: vault-config
        configMap:
          name: vault-config
          defaultMode: 0644
      - name: vault-data
        persistentVolumeClaim:
          claimName: vault-pvc