apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "flask-api.labels" . | nindent 4 }}
    {{- toYaml .Values.deployment.labels | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- toYaml .Values.deployment.labels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.deployment.labels | nindent 8 }}
    spec:
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      initContainers:
        - name: {{ .Values.initContainer.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          workingDir: {{ .Values.initContainer.workingDir }}
          env:
            - name: FLASK_APP
              value: {{ .Values.initContainer.env.FLASK_APP | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.keys.POSTGRES_USER }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.keys.POSTGRES_PASSWORD }}
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_HOST }}
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_PORT }}
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_DB }}
          command:
            - sh
            - -c
            - |
              echo "Waiting for Postgres at $POSTGRES_HOST:$POSTGRES_PORT..."
              until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER; do
                sleep 2
              done
              echo "Postgres is ready, running migrations..."
              flask db upgrade
      containers:
        - name: {{ .Values.deployment.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.keys.POSTGRES_USER }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.keys.POSTGRES_PASSWORD }}
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_HOST }}
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_PORT }}
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_DB }}