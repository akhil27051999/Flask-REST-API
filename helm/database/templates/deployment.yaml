apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
    {{- toYaml .Values.deployment.labels | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- toYaml .Values.deployment.labels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.deployment.labels | nindent 8 }}
    spec:
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.deployment.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          env:
            # Secrets for username & password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.keys.POSTGRES_USER }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.keys.POSTGRES_PASSWORD }}
            # ConfigMap for DB name, host, port
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_DB }}
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_HOST }}
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.name }}
                  key: {{ .Values.configMap.keys.POSTGRES_PORT }}
          volumeMounts:
            - name: {{ .Values.volume.name }}
              mountPath: {{ .Values.volume.mountPath }}
      volumes:
        - name: {{ .Values.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.pvc }}