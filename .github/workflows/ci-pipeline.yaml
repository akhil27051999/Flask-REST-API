name: REST-API-CI-Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
  pull_request:
    branches:
      - main
    paths:
      - 'app/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Python Setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Running tests
        run: pytest -v

      - name: Build Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}   # short commit SHA (e.g., d34db33)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t flask-app:$IMAGE_TAG .

      - name: login docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag flask-app:$IMAGE_TAG ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:$IMAGE_TAG

      - name: Clean up
        run: |
          docker rmi flask-app:$IMAGE_TAG || true
          docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:$IMAGE_TAG || true
          docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:latest || true
          docker system prune -f || true