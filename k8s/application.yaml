# ----------------------
# Namespace for application
# ----------------------
apiVersion: v1
kind: Namespace
metadata:
  name: student-api
---
# ----------------------
# ConfigMap for Flask API
# ----------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-config
  namespace: student-api
data:
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "studentdb"
---
# ----------------------
# Deployment for Flask REST API
# ----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-api
  namespace: student-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-api
  template:
    metadata:
      labels:
        app: flask-api
    spec:
      nodeSelector:
        type: application
      initContainers:
        - name: db-migrations
          image: akhilthyadi/flask-app:7.0.0
          workingDir: /api/app
          env:
            - name: FLASK_APP
              value: "wsgi.py"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: flask-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: flask-config
                  key: POSTGRES_PORT
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: flask-config
                  key: POSTGRES_DB
          command:
            - sh
            - -c
            - |
              echo "Waiting for Postgres at $POSTGRES_HOST:$POSTGRES_PORT..."
              until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER; do
                sleep 2
              done
              echo "Postgres is ready, running migrations..."
              flask db upgrade
      containers:
        - name: flask-api
          image: akhilthyadi/flask-app:7.0.0
          ports:
            - containerPort: 5000
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: flask-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: flask-config
                  key: POSTGRES_PORT
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: flask-config
                  key: POSTGRES_DB
---
# ----------------------
# Service to expose Flask API
# ----------------------
apiVersion: v1
kind: Service
metadata:
  name: flask-api-service
  namespace: student-api
spec:
  selector:
    app: flask-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: NodePort
