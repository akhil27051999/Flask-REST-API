# Namespace for observability (if not already exists)
apiVersion: v1
kind: Namespace
metadata:
  name: observability
  labels:
    app.kubernetes.io/name: observability
    app.kubernetes.io/instance: observability
---
# ConfigMap for PostgreSQL Exporter queries
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-exporter-config
  namespace: observability
  labels:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/instance: postgres-exporter
    app.kubernetes.io/component: config
data:
  queries.yaml: |
    pg_database:
      query: "SELECT datname, datistemplate, datallowconn, datconnlimit, datlastsysoid, datfrozenxid, datminmxid, dattablespace, datacl FROM pg_database"
      metrics:
        - datname:
            usage: "LABEL"
            description: "Name of the database"
        - datistemplate:
            usage: "LABEL"
            description: "Is this database a template?"
        - datallowconn:
            usage: "LABEL"
            description: "Is connection allowed to this database?"
        - datconnlimit:
            usage: "GAUGE"
            description: "Connection limit for this database (-1 means no limit)"
        - datlastsysoid:
            usage: "GAUGE"
            description: "Last system OID in the database"
        - datfrozenxid:
            usage: "GAUGE"
            description: "Age of frozen transaction ID in this database"
        - datminmxid:
            usage: "GAUGE"
            description: "Minimum multixact ID in this database"
        - dattablespace:
            usage: "LABEL"
            description: "Tablespace for this database"
---
# Deployment for PostgreSQL Exporter
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: observability
  labels:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/instance: postgres-exporter
    app.kubernetes.io/component: exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-exporter
      app.kubernetes.io/instance: postgres-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-exporter
        app.kubernetes.io/instance: postgres-exporter
        app.kubernetes.io/component: exporter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
        prometheus.io/path: "/metrics"
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube-m03
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:latest
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          valueFrom:
            secretKeyRef:
              name: postgres-exporter-secret
              key: DATA_SOURCE_URI
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: "/config/queries.yaml"
        volumeMounts:
        - name: config
          mountPath: /config
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: postgres-exporter-config
---
# Service for PostgreSQL Exporter
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: observability
  labels:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/instance: postgres-exporter
    app.kubernetes.io/component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
spec:
  ports:
  - port: 9187
    targetPort: 9187
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/instance: postgres-exporter
  type: ClusterIP
---
# ServiceMonitor for PostgreSQL Exporter (Automatic Prometheus Discovery)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-exporter
  namespace: observability
  labels:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/instance: postgres-exporter
    app.kubernetes.io/component: servicemonitor
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-exporter
  endpoints:
  - port: metrics
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
    params:
      format: [prometheus]