services:
  flask-app-1:
    build: 
      context: ./app
      dockerfile: Dockerfile
    image: flask-app:1.0.0
    container_name: flask-container-1
    restart: always
    env_file:
      - ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app

  flask-app-2:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: flask-app:1.0.0
    container_name: flask-container-2
    restart: always
    env_file:
      - ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app

  postgres:
    image: postgres:13
    container_name: postgres-container
    restart: always
    env_file:
      - ./.env.prod
    ports:
      - "5432:5432"   
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 20s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: nginx-container
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - flask-app-1
      - flask-app-2

volumes:
  pgdata:
    driver: local
